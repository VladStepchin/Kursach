//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kursach
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ScrapMetal : DbContext
    {
        public ScrapMetal()
            : base("name=ScrapMetal")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Arraiving> Arraivings { get; set; }
        public DbSet<Consumption> Consumptions { get; set; }
        public DbSet<Provider> Providers { get; set; }
        public DbSet<Receiver> Receivers { get; set; }
        public DbSet<Scrap> Scraps { get; set; }
        public DbSet<Store> Stores { get; set; }
        public DbSet<ColumnsCount> ColumnsCounts { get; set; }
        public DbSet<VIPProvider> VIPProviders { get; set; }
    
        public virtual ObjectResult<Nullable<double>> countAllArraiving()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("countAllArraiving");
        }
    
        public virtual ObjectResult<Nullable<int>> countRows()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("countRows");
        }
    
        public virtual int coutRows()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("coutRows");
        }
    
        public virtual ObjectResult<string> getVIP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getVIP");
        }
    
        public virtual int TableCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TableCounts");
        }
    
        public virtual int TableFieldsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TableFieldsCount");
        }
    }
}
